import discord
import os
import asyncio
<<<<<<< HEAD
from discord.ext import commands, tasks
=======
from discord.ext import commands, tasks  
>>>>>>> 07d671ece4baacd6f5e2e05d8b7cc69f3249e014
from dotenv import load_dotenv
from database import Database

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î .env ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á Local
if os.path.exists('.env'):
    load_dotenv()

# ‚úÖ ‡∏î‡∏∂‡∏á TOKEN ‡∏à‡∏≤‡∏Å Railway Environment ‡∏´‡∏£‡∏∑‡∏≠ .env
TOKEN = os.getenv("DISCORD_TOKEN")

if not TOKEN:
    raise ValueError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö DISCORD_TOKEN! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô Railway Environment Variables")

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏° Intents
intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)
bot.db = Database()
bot.db_lock = asyncio.Lock()  # ‚úÖ ‡πÉ‡∏ä‡πâ Lock ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Database Locked

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    await bot.db.initialize()  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ

    # ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î status ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
    await bot.change_presence(activity=discord.Game("üü¢Online ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß"))

    success_count, failed_cogs = 0, []

    for filename in os.listdir("./cogs"):
        if filename.endswith(".py"):
            cog_name = f"cogs.{filename[:-3]}"
            try:
                await bot.load_extension(cog_name)
                success_count += 1
                print(f"‚úÖ Loaded {cog_name}")
            except Exception as e:
                failed_cogs.append((cog_name, str(e)))
                print(f"‚ùå Failed to load {cog_name}: {e}")

    try:
        await bot.tree.sync()
        print("‚úÖ Synced Slash Commands!")
    except Exception as e:
        print(f"‚ùå Failed to sync Slash Commands: {e}")

    print(f"\nüéØ Loaded {success_count} cogs successfully.")
    if failed_cogs:
        print("‚ùå Failed to load the following cogs:")
        for cog, error in failed_cogs:
            print(f"   - {cog}: {error}")

    print("‚úÖ Cupid Call Online")

    @tasks.loop(minutes=25)  # ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡πÜ 25 ‡∏ô‡∏≤‡∏ó‡∏µ
    async def keep_alive():
        channel = bot.get_channel(1335980962189672509)
        if channel:
            await channel.send("üü¢Online CupidCall ‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà!")

bot.run(TOKEN)
